<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:mela="http://www.infosys.tuwien.ac.at/schema/mela"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
       http://www.infosys.tuwien.ac.at/schema/mela http://www.infosys.tuwien.ac.at/schema/mela/spring-mela.xsd
       http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
       http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms.xsd">


    <!-- database related configuration -->

    <!--<jdbc:embedded-database id="dataSource" type="HSQL"/>-->

    <!-- this configures a standalone HSQLDB server instance that is started during application startup -->
    <bean id="database" class="at.ac.tuwien.dsg.mela.dataservice.spring.HsqlServerBean" lazy-init="false">
        <property name="serverProperties">
            <props>
                <prop key="server.port">9001</prop>
                <prop key="server.database.0">/tmp/mela/db</prop>
                <prop key="server.dbname.0">mela</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" depends-on="database">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:hsql://localhost:9001/mela"/>
        <property name="username" value="SA"/>
        <property name="password" value=""/>
    </bean>


    <jdbc:initialize-database data-source="dataSource" enabled="#{!${dataservice.operationmode.continuous}}">
        <jdbc:script location="./config/sql/schema.sql"/>
    </jdbc:initialize-database>

    <jdbc:initialize-database data-source="dataSource" enabled="${dataservice.operationmode.continuous}">
        <jdbc:script location="./config/sql/schema-continous.sql"/>
    </jdbc:initialize-database>

    <!-- MELA properties -->
    <context:property-placeholder location="./config/mela-data-service.properties"/>

    <!-- Adds annotated spring beans -->
    <context:component-scan base-package="at.ac.tuwien.dsg"/>

    <!-- JMS stuff -->
    <bean id="jmsFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${dataservice.configuration.uri}"/>
    </bean>

    <amq:broker useJmx="true" persistent="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="${dataservice.configuration.uri}"/>
        </amq:transportConnectors>
    </amq:broker>

    <jms:listener-container container-type="default" connection-factory="jmsFactory" acknowledge="auto">
        <jms:listener destination="MELADataService.Config" ref="commandConsumer"/>
    </jms:listener-container>

    <mela:ganglia-datasource id="ganglia-remote" host="128.130.172.214" port="8649" polling-interval-ms="5000"/>

</beans>
